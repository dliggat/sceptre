AWSTemplateFormatVersion: "2010-09-09"

Description: RDS instance

Parameters:
  ResourcePrefix:
    Type: String

  VpcId:
    Type: String

  SubnetAZ0Id:
    Type: String

  SubnetAZ1Id:
    Type: String

  MultiAz:
    Type: String

  PubliclyAccessible:
    Type: String

  DbName:
    Type: String

  DbEngine:
    Type: String

  DbVersion:
    Type: String

  DbPort:
    Type: String

  DbInstanceClass:
    Type: String

  AllocatedStorage:
    Type: String

  RdsUsername:
    Type: String
    NoEcho: "true"

  RdsPassword:
    Type: String
    NoEcho: "true"

  DBIngressSG:
    Type: String
    Default: ""


Conditions:
  IsMultiAz:
    "Fn::Equals":
      - { Ref: MultiAz }
      - "true"

  NoDbIngressSecurityGroup:
    "Fn::Equals":
      - { Ref: DBIngressSG }
      - ""


Resources:
  Database:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage: { Ref: AllocatedStorage }
      AllowMajorVersionUpgrade: "false"
      AutoMinorVersionUpgrade: "true"
      AvailabilityZone:
        "Fn::If":
          - IsMultiAz
          - { Ref: "AWS::NoValue" }
          - { "Fn::Select": [ "0", { "Fn::GetAZs": "" } ] }
      DBInstanceClass: { Ref: DbInstanceClass }
      DBName: { Ref: DbName }
      DBSubnetGroupName: { "Ref" : "DatabaseSubnetGroup" }
      Engine: { Ref: DbEngine }
      EngineVersion: { Ref: DbVersion }
      MasterUsername: { Ref: RdsUsername }
      MasterUserPassword: { Ref: RdsPassword }
      MultiAZ: { Ref: MultiAz }
      Port: { Ref: DbPort }
      PubliclyAccessible: { Ref: PubliclyAccessible }
      StorageType: standard
      DBSecurityGroups:
        - { "Ref": "DatabaseSecurityGroup" }
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ResourcePrefix }
                - "db"


  DatabaseSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      EC2VpcId: { Ref: VpcId }
      DBSecurityGroupIngress:
        - "Fn::If":
          - NoDbIngressSecurityGroup
          - { Ref: "AWS::NoValue" }
          - EC2SecurityGroupId: { Ref: DBIngressSG }
      GroupDescription: Security group for RDS
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ResourcePrefix }
                - "sg"

  DatabaseSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnet group for the RDS instance
      SubnetIds:
        - { Ref: SubnetAZ0Id }
        - { Ref: SubnetAZ1Id }
      Tags:
        - Key: Name
          Value:
            "Fn::Join":
              - "-"
              - - { Ref: ResourcePrefix }
                - "subnet-group"

Outputs:
  DbEndpointHost:
    Value:
      "Fn::GetAtt": [ Database, Endpoint.Address ]
  DbEndpointPort:
    Value:
      "Fn::GetAtt": [ Database, Endpoint.Port ]
